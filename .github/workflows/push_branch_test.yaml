#For the provider URL: Use https://token.actions.githubusercontent.com
#For the "Audience": Use sts.amazonaws.com 
name: Test Branch Name
on:
  push:
    branches:
      - publish
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Select branch
        run: |
          echo "BRANCH=$(if [ '${{ github.event_name }}' = 'pull_request' ]; then echo ${{ github.event.pull_request.head.sha }}; else echo ${{ github.ref.GITHUB_REF_NAME }}; fi)" >> $GITHUB_ENV
          echo "${{ env.BRANCH }}"
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}
          
      - name: Print directory content
        run: |
          ls -la
          cat push_event_file.txt
          
      - name: Send payload file to slack
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Link-checker build result: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<!here> Link-checker build result: *${{ job.status }}*\n Please check the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Build URL> for logs and linkchecker report."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
